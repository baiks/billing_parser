apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: {{ .Values.replicaCount.minReplicas }}
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        # azure.workload.identity/use: "true"   # to auth azure sql
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 5678
        runAsGroup: 5678
        fsGroup: 5678
        seccompProfile:
          type: RuntimeDefault
      # serviceAccountName: sql-service-account  # to auth azure sql
      automountServiceAccountToken: false
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 5678
            capabilities:
              drop:
                - ALL
          resources:
            {{- if or (eq .Values.env "development") (eq .Values.env "dev") (eq .Values.env "uat") (eq .Values.env "release") (eq .Values.env "pilot") }}
            requests:
              memory: {{ .Values.resources.requestsMemory }}
              cpu: {{ .Values.resources.requestsCpu }}
            limits:
              memory: {{ .Values.resources.limitsMemory }}
              cpu: {{ .Values.resources.limitsCpu }}
            {{- else if or (eq .Values.env "preprod") (eq .Values.env "prod") (eq .Values.env "production") }}
            requests:
              memory: {{ .Values.resources.prodRequestsMemory }}
              cpu: {{ .Values.resources.prodRequestsCpu }}
            limits:
              memory: {{ .Values.resources.prodLimitsMemory }}
              cpu: {{ .Values.resources.prodLimitsCpu }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.container.port }}
          env:
            - name: SPRING_PROFILE
              value: {{ .Values.env }}
            - name: TZ
              value: Africa/Nairobi
            - name: APPLICATIONINSIGHTS_CONFIGURATION_FILE
              value: applicationinsights-{{ .Values.env }}.json
          volumeMounts:
            - name: azure
              mountPath: /mnt/azure
      volumes:
        - name: azure
          persistentVolumeClaim:
            claimName: billingstorage-pvc
